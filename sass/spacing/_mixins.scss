/** Creates placeholders and classes */
@mixin spacing-placeholders($scale, $pre, $prop) {
  $size: scale-rem(nth($spacing-scale, $scale + 1));
  $spacing-name: --spacing--#{$prop}--#{$scale}--#{$pre};

  @include keep($spacing-name) {
    %#{$pre}--t#{$scale} {
      #{$prop}-top: $size;
    }

    %#{$pre}--b#{$scale} {
      #{$prop}-bottom: $size;
    }

    %#{$pre}--y#{$scale} {
      @extend %#{$pre}--t#{$scale};
      @extend %#{$pre}--b#{$scale};
    }

    %#{$pre}--r#{$scale} {
      #{$prop}-right: $size;
    }

    %#{$pre}--l#{$scale} {
      #{$prop}-left: $size;
    }

    %#{$pre}--x#{$scale} {
      @extend %#{$pre}--r#{$scale};
      @extend %#{$pre}--l#{$scale};
    }

    %#{$pre}--#{$scale} {
      #{$prop}: $size;
    }
  }
}


@mixin spacing-group($scale, $pre, $prop) {
  $size: scale-rem(nth($spacing-scale, $scale + 1));

  @include spacing-placeholders($scale, $pre, $prop);

  .#{$pre}--t#{$scale} {
    @extend %#{$pre}--t#{$scale};
  }

  .#{$pre}--b#{$scale} {
    @extend %#{$pre}--b#{$scale};
  }

  .#{$pre}--y#{$scale} {
    @extend %#{$pre}--y#{$scale};
  }

  .#{$pre}--r#{$scale} {
    @extend %#{$pre}--r#{$scale};
  }

  .#{$pre}--l#{$scale} {
    @extend %#{$pre}--l#{$scale};
  }

  .#{$pre}--x#{$scale} {
    @extend %#{$pre}--x#{$scale};
  }

  .#{$pre}--#{$scale} {
    @extend %#{$pre}--#{$scale};
  }
}


@mixin margin-group($size, $prefix: $margin-name) {
  @include spacing-group($size, $prefix, 'margin')
}


@mixin padding-group($size, $prefix: $padding-name) {
  @include spacing-group($size, $prefix, 'padding')
}


@mixin margin-placeholders($size, $prefix: $margin-name) {
  @include spacing-placeholders($size, $prefix, 'margin')
}


@mixin padding-placeholders($size, $prefix: $padding-name) {
  @include spacing-placeholders($size, $prefix, 'padding')
}


@mixin harden-padding($base) {
  @for $x from 1 through length($spacing-scale) {
    $scale: scale-rem(nth($spacing-scale, $x));
    $scale-label: $x - 1;
    @each $type in ('', 't', 'r', 'b', 'l', 'y', 'x') {
      .#{$base}.#{$padding-name}--#{$type}#{$scale-label} {
        @extend %#{$padding-name}--#{$type}#{$scale-label};
      }
    }
  }

  @each $gutter in ('', '-2', '-t', '-2t', '-r', '-2r', '-b', '-2b', '-l', '-2l', '-x', '-2x', '-y', '-2y') {
    .#{$base}.#{$padding-name}--gutters#{$gutter} {
      @extend .#{$padding-name}--gutters#{$gutter};
    }
  }
}

@mixin harden-margin($base) {
  @for $x from 1 through length($spacing-scale) {
    $scale: scale-rem(nth($spacing-scale, $x));
    $scale-label: $x - 1;
    @each $type in ('', 't', 'r', 'b', 'l', 'y', 'x') {
      .#{$base}.#{$margin-name}--#{$type}#{$scale-label} {
        @extend %#{$margin-name}--#{$type}#{$scale-label};
      }
    }
  }

  @each $gutter in ('', '-2', '-t', '-2t', '-r', '-2r', '-b', '-2b', '-l', '-2l', '-x', '-2x', '-y', '-2y') {
    .#{$base}.#{$margin-name}--gutters#{$gutter} {
      @extend .#{$margin-name}--gutters#{$gutter};
    }
  }
}


@function scale-spacing($scale) {
  @return scale-rem(nth($spacing-scale, $scale + 1));
}

@mixin padding($scale) {
  @include keep(--padding-#{$scale}) {
    padding: scale-spacing($scale);
  }
}

@mixin margin($scale) {
  @include keep(--margin-#{$scale}) {
    margin: scale-spacing($scale);
  }
}
