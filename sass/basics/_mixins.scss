@mixin harden-border-width($base) {
  @for $x from 1 through length($border-width-scale) {
    $scale: scale-rem(nth($border-width-scale, $x));
    $scale-label: $x - 1;
    @each $type in ('', 't', 'r', 'b', 'l', 'y', 'x') {
      .#{$base}.#{$border-width-name}--#{$type}#{$scale-label} {
        @extend %#{$border-width-name}--#{$type}#{$scale-label};
      }
    }
  }
}

@mixin harden-border-radius($base) {
  @for $x from 1 through length($border-radius-scale) {
    $scale: scale-rem(nth($border-radius-scale, $x));
    $scale-label: $x - 1;
    @each $type in ('', 't', 'r', 'b', 'l') {
      .#{$base}.#{$border-radius-name}--#{$type}#{$scale-label} {
        @extend %#{$border-radius-name}--#{$type}#{$scale-label};
      }
    }
  }
}


@function scale-border-radius($scale) {
  @return scale-rem(nth($border-radius-scale, $scale + 1));
}

@mixin border-radius($scale) {
  @include keep(--border-radius-#{$scale}) {
    border-radius: scale-border-radius($scale);
  }
}


@function scale-border-width($scale) {
  @return scale-rem(nth($border-width-scale, $scale + 1));
}

@mixin border-width($scale) {
  @include keep(--border-width-#{$scale}) {
    border-width: scale-border-width($scale);
  }
}
