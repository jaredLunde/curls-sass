@mixin keep-animation($name) {
  $name: --animate--#{keep-safe($name)};

  @include keepholder($name) {
    @content;
  }

  @extend %#{$name};
}

@mixin animate($args...) {
  @include keep-animation(#{$args}) {
    //$change: null;
    //@each $arg in $args {
    //  @if $change {
    //    $change: '#{$change}, #{nth($arg, 1)}';
    //  } @else {
    //    $change: nth($arg, 1);
    //  }
    //}
    //will-change: unquote($change);
    @include transition($args...);
  }
}


@mixin fade-in($speed: $MED, $delay: 0s, $easing: $SWIFT-OUT) {
  @include animate(visibility 0s linear ($delay + $speed),
                   opacity $speed $easing $delay);
}


@mixin fade-out($speed: $MED, $delay: 0s, $easing: $SWIFT-IN) {
  @include animate(visibility 0s linear,
                   opacity $speed $easing $delay);
}

@mixin drop-in($speed: $MED, $delay: 0s, $easing: $SWIFT-OUT) {
  @include animate(visibility 0s linear ($delay + $speed),
                   opacity $speed $easing $delay,
                   transform $speed $easing $delay);
}

@mixin drop-out($speed: $MED, $delay: 0s, $easing: $SWIFT-IN) {
  @include animate(visibility 0s linear,
                   opacity $speed $easing $delay,
                   transform $speed $easing $delay);
}


@mixin slide-in($speed: $MED, $delay: 0s, $easing: $HEAVY-MOVE) {
  @include animate(visibility 0s linear ($delay + $speed),
                   transform $speed $easing $delay);
}

@mixin slide-out($speed: $MED, $delay: 0s, $easing: $HEAVY-MOVE) {
  @include animate(visibility 0s linear,
                   transform $speed $easing $delay);
}


@mixin harden-timing-functions($base) {
  @each $tf in map-keys($timing-functions) {
    .#{$base}.#{$margin-name}--#{$tf} {
      @extend #{$animate-name}--#{$tf};
    }
  }
}

@mixin harden-animation-speeds($base) {
  @each $speed in map-keys($animation-speeds) {
    .#{$base}.#{$margin-name}--#{$speed} {
      @extend #{$animate-name}--#{$speed};
    }
  }
}
